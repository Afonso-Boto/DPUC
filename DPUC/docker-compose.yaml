version: '3.8'

services:
#  es01:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    container_name: ${HOST_ES01}
#    platform: linux/x86_64
#    restart: always
#    volumes:
#      - esdata01:/usr/share/elasticsearch/data
#    ports:
#      - ${ES_PORT}:9200
#    environment:
#      - node.name=${HOST_ES01}
#      - cluster.name=${CLUSTER_NAME}
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#      - bootstrap.memory_lock=true
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    cap_add:
#      - IPC_LOCK
#    mem_limit: ${MEM_LIMIT}
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "curl -fsSL http://localhost:9200/_cat/health?h=status | grep -q 'green\\|yellow' "
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 100

  mysqldb:
    container_name: ${HOST_MYSQLDB}
    platform: linux/x86_64
    image: mysql:5.7
    env_file: ./.env
    command: --explicit_defaults_for_timestamp
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - ./volumes/mysql/scripts:/populate.sql
      - ./volumes/mysql/scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: [
        "CMD",
        "mysqladmin" ,"ping", "-h", "localhost"
      ]
      timeout: 5s
      interval: 10s
      retries: 100

#  fetcher-search:
#    depends_on:
#      es01:
#        condition: service_healthy
#      mysqldb:
#        condition: service_healthy
#    container_name: ${HOST_SEARCH_API}
#    platform: linux/x86_64
#    build: search_api
#    command: python3 manage.py runserver 0.0.0.0:${DJANGO_DOCKER_PORT}
#    restart: always
#    ports:
#      - ${DJANGO_FETCHER_SEARCH_LOCAL_PORT}:${DJANGO_DOCKER_PORT}
#    environment:
#      - DB_HOST=${HOST_MYSQLDB}
#      - DB_NAME=${MYSQLDB_DATABASE}
#      - DB_USER=${MYSQLDB_USER}
#      - DB_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
#      - ES_HOST=${HOST_ES01}
#      - ES_PORT=${ES_PORT}
#      - ES_INDEX=${INDEX_NAME}
#    healthcheck:
#      test:
#        [
#          'CMD-SHELL',
#          curl -s http://localhost:$DJANGO_DOCKER_PORT/ || exit 1
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 100

  fetcher-main:
    depends_on:
      mysqldb:
        condition: service_healthy
#      fetcher-search:
#        condition: service_healthy
    build: ./fetcher-main
    env_file: ./.env
    ports:
      - ${SPRING_FETCHER_LOCAL_PORT}:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
          "spring.datasource.username" : "$MYSQLDB_USER",
          "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
          "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
          "spring.jpa.hibernate.ddl-auto" : "create-drop"}'
    volumes:
      - ./volumes/fetcher-main/:/root/.m2
    stdin_open: true
    tty: true

#  kibana:
#    depends_on:
#      es01:
#        condition: service_healthy
#      fetcher-search:
#        condition: service_healthy
#    platform: linux/x86_64
#    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
#    container_name: kibana
#    restart: always
#    volumes:
#      - kibanadata:/usr/share/kibana/data
#    ports:
#      - ${KIBANA_PORT}:5601
#    environment:
#      - SERVERNAME=kibana
#      - ELASTICSEARCH_HOSTS=http://${HOST_ES01}:9200
#      - ELASTICSEARCH_USERNAME=kibana_system
#      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
#    mem_limit: ${MEM_LIMIT}
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 100

#  teacher-app:
#    depends_on:
#      - mysqldb
#      - fetcher-criacao
#      - fetcher-edicao
#      - fetcher-search
#    build: ./teacher-app
#    ports:
#      - $SPRING_TEACHER_LOCAL_PORT:3000
#    volumes:
#      - ./volumes/teacher-app/:/root/.m2
#    stdin_open: true
#    tty: true

volumes:
  db:
  esdata01:
    driver: local
  kibanadata:
    driver: local