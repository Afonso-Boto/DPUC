version: '3.8'

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: ${HOST_ES01}
    restart: always
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=${HOST_ES01}
      - cluster.name=${CLUSTER_NAME}
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsSL http://localhost:9200/_cat/health?h=status | grep -q 'green\\|yellow' "
        ]
      interval: 10s
      timeout: 10s
      retries: 100

  mysqldb:
    platform: linux/x86_64
    image: mysql:5.7
    env_file: ./.env
    command: --explicit_defaults_for_timestamp
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - ./volumes/mysql/db:/var/lib/mysql
      - ./volumes/mysql/scripts:/docker-entrypoint-initdb.d

  fetcher-main:
    depends_on:
      - mysqldb
    build: ./fetcher-main
    env_file: ./.env
    ports:
      - $SPRING_FETCHER_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
          "spring.datasource.username" : "$MYSQLDB_USER",
          "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
          "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
          "spring.jpa.hibernate.ddl-auto" : "create-drop"}'
    volumes:
      - ./volumes/fetcher-main/:/root/.m2
    stdin_open: true
    tty: true

#  fetcher-search:
#    depends_on:
#      - mysqldb
#    build: ./fetcher-search
#    env_file: ./.env
#    ports:
#      - $SPRING_FETCHER_SEARCH_LOCAL_PORT:$SPRING_DOCKER_PORT
#    environment:
#      SPRING_APPLICATION_JSON: '{
#            "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
#            "spring.datasource.username" : "$MYSQLDB_USER",
#            "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
#            "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
#            "spring.jpa.hibernate.ddl-auto" : "update"}'
#    volumes:
#      - ./volumes/fetcher-search/:/root/.m2
#    stdin_open: true
#    tty: true

#  teacher-app:
#    depends_on:
#      - mysqldb
#      - fetcher-criacao
#      - fetcher-edicao
#      - fetcher-search
#    build: ./teacher-app
#    ports:
#      - $SPRING_TEACHER_LOCAL_PORT:3000
#    volumes:
#      - ./volumes/teacher-app/:/root/.m2
#    stdin_open: true
#    tty: true

volumes:
  db: